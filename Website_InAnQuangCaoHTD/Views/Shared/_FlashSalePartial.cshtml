@model List<Website_InAnQuangCaoHTD.Models.FlashSaleViewModel>
<style>
    .description-limit {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis; 
    }

</style>
<div class="container mt-4">
    <div class="d-flex justify-content-between p-3">
        <h3 style="color:rgb(251, 111, 4)"><i style="padding-right: 10px; color: #ff0101;" class="fa-solid fa-bolt"></i>FLASH SALE</h3>
        @if (Model != null && Model.Count > 0)
        {
            var firstFlashSale = Model.First();
            <div class="d-flex" id="timesale"
                 data-start-time="@firstFlashSale.FlashSaleStartTime.ToString("o")"
                 data-end-time="@firstFlashSale.FlashSaleEndTime.ToString("o")">
                <div>
                    <span id="hours">00</span>
                </div>
                <span style="color: #ff0101;">:</span>
                <div>
                    <span id="minutes">00</span>
                </div>
                <span style="color: #ff0101;">:</span>
                <div>
                    <span id="seconds">00</span>
                </div>
            </div>
        }
        else{
        <h5>Hiện tại không có sản phẩm nào được Sale </h5>
        }

    </div>
    <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
        <div class="carousel-inner">
            @{
                var itemsPerPage = 4; // Số lượng sản phẩm trên mỗi carousel-item
                var currentIndex = 0;
                var isActive = "active"; // Đánh dấu item đầu tiên là active

                // Lấy danh sách sản phẩm từ mô hình
                var products = Model.SelectMany(fs => fs.Products).ToList();

                while (currentIndex < products.Count)
                {
                    <div class="carousel-item @isActive">
                        <div class="row">
                            @for (var i = 0; i < itemsPerPage && currentIndex < products.Count; i++, currentIndex++)
                            {
                                var product = products[currentIndex];
                                <div class="col-md-3 mb-3">
                                    <div class="card border-success mb-3">
                                        <div class="card-header bg-success bg-gradient border-success fw-bold">@product.ProductName</div>
                                        <div class="card-body text-dark">
                                          
                                            <h5 class="card-title">
                                                <a href="@Url.Action("Details","Product", new { id = product.ProductID })">
                                                    <img src="~/img/@product.ImageFileName" class="carousel-item_img" />
                                                </a>
                                            </h5>
                                            <p class="card-text description-limit">@product.Description</p>
                                            <div class="d-flex flex-wrap justify-content-start">
                                                <div class="color-price" style="margin-right: 5px;">
                                                    @product.FlashSalePrice.ToString("N0", new System.Globalization.CultureInfo("vi-VN")) VNĐ
                                                </div>
                                                <div class="color-price-sale">
                                                    @product.OriginalPrice.ToString("N0", new System.Globalization.CultureInfo("vi-VN")) VNĐ

                                                </div>
                                            </div>
                                        </div>
                                        <div class="card-footer bg-transparent border-success">
                                            <a href="#" class="btn btn-outline-success">Đặt hàng ngay</a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    isActive = ""; // Chỉ đặt active cho carousel-item đầu tiên
                }
            }
   
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev" style="width: 25px; color: black">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next" style="width: 25px; color: black">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Lấy phần tử chứa thời gian
        var countdownElement = document.querySelector("#timesale");

        // Lấy thời gian bắt đầu và kết thúc từ thuộc tính data
        var startTime = new Date(countdownElement.getAttribute("data-start-time"));
        var endTime = new Date(countdownElement.getAttribute("data-end-time"));

        // Hàm cập nhật đếm ngược
        function updateCountdown() {
            var now = new Date().getTime();

            // Tính thời gian còn lại
            var timeLeft = endTime - now;

            // Kiểm tra các phần tử có tồn tại trước khi cập nhật
            var hoursElement = countdownElement.querySelector("#hours");
            var minutesElement = countdownElement.querySelector("#minutes");
            var secondsElement = countdownElement.querySelector("#seconds");

            if (hoursElement && minutesElement && secondsElement) { 
                if (timeLeft >= 0) {
                    var hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                    var minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
                    var seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

                    // Cập nhật giá trị trong HTML
                    hoursElement.textContent = hours.toString().padStart(2, "0");
                    minutesElement.textContent = minutes.toString().padStart(2, "0");
                    secondsElement.textContent = seconds.toString().padStart(2, "0");
                } else {
                    // Hết thời gian
                    hoursElement.textContent = "00";
                    minutesElement.textContent = "00";
                    secondsElement.textContent = "00";
                }
            }
        }

        // Gọi hàm cập nhật đếm ngược mỗi giây
        updateCountdown(); // Gọi ngay khi trang load
        setInterval(updateCountdown, 1000); // Cập nhật mỗi giây
    });




</script>